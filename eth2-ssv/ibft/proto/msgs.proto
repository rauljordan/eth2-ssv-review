syntax = "proto3";

package proto;

option go_package = "github.com/bloxapp/ssv/ibft/proto";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum RoundState {
  NotStarted    = 0;
  PrePrepare    = 1;
  Prepare       = 2;
  Commit        = 3; // Commit is when an instance receives a qualified quorum of prepare msgs, then sends a commit msg.
  ChangeRound   = 4;
  Decided       = 5; // Decided is when an instance receives a qualified quorum of commit msgs
  Stopped       = 6;
}

message Message {
  RoundState type         = 1;
  uint64 round            = 2;
  bytes lambda            = 3;
  // sequence number is an incremental number for each instance, much like a block number would be in a blockchain
  uint64 seq_number       = 4;
  bytes value             = 5;
  bytes validator_pk      = 6;
}

message SignedMessage{
  Message message = 1 [(gogoproto.nullable) = false];
  bytes signature = 2 [(gogoproto.nullable) = false];
  repeated uint64 signer_ids  = 3;
}

message ChangeRoundData{
  uint64 prepared_round       = 1;
  bytes prepared_value        = 2 [(gogoproto.nullable) = false];
  Message justification_msg   = 3 [(gogoproto.nullable) = false];
  bytes justification_sig     = 4 [(gogoproto.nullable) = false];
  repeated uint64 signer_ids  = 5;
}